from pygame import *
from random import randint
# функции для работы с шрифтом
font.init()
font1= font.SysFont('Arial', 80)
win = font1.render('ПОБЕДА!', True, (0, 255, 0))
lose = font1.render('ПОРАЖЕНИЕ!', True, (255, 0, 0))
font2 = font.SysFont('Arial', 36)

# музыка
mixer.init()
mixer.music.load('space.ogg')
mixer.music.play(-1)
mixer.music.set_volume(0.5)
fire_sound = mixer.Sound('odnokratnyiy-piu.ogg')

font.init()
font2 = font.Font(None, 36)

img_back = 'galaxy.jpg' # фон игры
img_hero = 'rocket.png' # игрок
img_enemy = 'ufo.png' # враг
img_bullet = 'bullet.png' # пуля
win_width = 700
win_height = 500
display.set_caption('ШУТЕР')
window = display.set_mode((win_width, win_height))
background = transform.scale(image.load(img_back), (win_width, win_height))
score = 0
lost = 0 
goal = 10 # кол-во побитых
max_lost = 3 # максимально кол-во, которое можно пропустить

gameIcon = image.load()

# класс-родитель для других спрайтов
class GameSprite(sprite.Sprite):
    #конструктор класса
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        #Вызываем конструктор класса (Sprite):
        sprite.Sprite.__init__(self)
        #каждый спрайт должен хранить свойство image - изображение
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        #каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    #метод, отрисовывающий героя на окне
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    #метод для управления спрайтом стрелками клавиатуры
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < win_width - 80:
            self.rect.x += self.speed
    #метод "выстрел" (используем место игрока, чтобы создать там пулю)
    def fire(self):
        bullet = Bullet(img_bullet, self.rect.centerx, self.rect.top, 15, 20, -15)
        bullets.add(bullet)


class Enemy(GameSprite):
    #движение врага
    def update(self):
        self.rect.y += self.speed
        global lost
        #исчезает, если дойдет до края экрана
        if self.rect.y > win_height:
            self.rect.x = randint(80, win_width - 80)
            self.rect.y = 0
            lost = lost + 1

class Bullet(GameSprite):
    #движение врага
    def update(self):
        self.rect.y += self.speed
        #исчезает, если дойдет до края экрана
        if self.rect.y < 0:
            self.kill()

ship = Player(img_hero, 5, win_height - 100, 80, 100, 30)

monsters = sprite.Group()
for i in range(1, 6):
    monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
    monsters.add(monster)

bullets = sprite.Group()

finish = False
run = True # флаг сбрасывается кнопкой закрытия окна
while run:
    # события нажатия кнопку "Закрыть"
    for e in event.get():
        if e.type == QUIT:
            run = False
        elif e.type == KEYDOWN:
            if e.key == K_SPACE:
                fire_sound.play()
                ship.fire()
    if not finish:
        window.blit(background,(0,0))
        # пишем текст на экране
        text = font2.render('Счёт: ' + str(score), 1, (255, 255, 255))
        window.blit(text, (10, 20))
        text_lose = font2.render('Пропущено: ' + str(lost), 1, (255, 255, 255))
        window.blit(text_lose, (10, 50))
        # производим движение спрайтов
        ship.update()
        monsters.update()
        bullets.update()
        # обновляем их в новом местоположении при каждой интерации цикла
        ship.reset()
        monsters.draw(window)
        bullets.draw(window)
        # столкновение врагов с пулями
        collides = sprite.groupcollide(monsters, bullets, True, True)
        for c in collides:
            # повтор цикла столько, сколько врагов побито
            score = score + 1
            monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
            monsters.add(monster)
        # проигрыш
        if sprite.spritecollide(ship, monsters, False) or lost >= max_lost:
            finish = True
            window.blit(lose, (200, 200))
        # проверка выигрыша: проверка кол-ва очков
        if score >= goal:
            finish = True
            window.blit(win, (200, 200))

        display.update()
    # автоматический перезапуск игры
    else:
        finish = False
        score = 0
        lost = 0
        for b in bullets:
            b.kill()
        for m in monsters:
            m.kill()
        time.delay(3000)
        for i in range(1, 6):
            monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
            monsters.add(monster)
    time.delay(50)
